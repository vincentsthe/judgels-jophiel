# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Imports
->             /                                                commons.Routes

# Map static resources from the /public folder to the /assets URL path
GET            /assets/*file                                    controllers.Assets.at(path="/public", file)
GET            /vassets/*file                                   controllers.Assets.versioned(path="/public", file: Asset)

GET            /users                                           @org.iatoki.judgels.jophiel.controllers.UserController.index()
GET            /users/                                          @org.iatoki.judgels.jophiel.controllers.UserController.listUsers(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET            /users/unverified                                @org.iatoki.judgels.jophiel.controllers.UserController.viewUnverifiedUsers()
GET            /users/unverified/                               @org.iatoki.judgels.jophiel.controllers.UserController.listUnverifiedUsers(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET            /users/create                                    @org.iatoki.judgels.jophiel.controllers.UserController.createUser()
POST           /users/create                                    @org.iatoki.judgels.jophiel.controllers.UserController.postCreateUser()
GET            /users/$uId<[0-9]{1,18}>/view                    @org.iatoki.judgels.jophiel.controllers.UserController.viewUser(uId: Long)
GET            /users/$uId<[0-9]{1,18}>/update                  @org.iatoki.judgels.jophiel.controllers.UserController.updateUser(uId: Long)
POST           /users/$uId<[0-9]{1,18}>/update                  @org.iatoki.judgels.jophiel.controllers.UserController.postUpdateUser(uId: Long)
GET            /users/$uId<[0-9]{1,18}>/delete                  @org.iatoki.judgels.jophiel.controllers.UserController.deleteUser(uId: Long)

GET            /activities                                      @org.iatoki.judgels.jophiel.controllers.UserActivityController.viewOwnActivities()
GET            /activities/                                     @org.iatoki.judgels.jophiel.controllers.UserActivityController.listOwnActivities(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "", clientNames ?= "")
GET            /users/activities                                @org.iatoki.judgels.jophiel.controllers.UserActivityController.index()
GET            /users/activities/                               @org.iatoki.judgels.jophiel.controllers.UserActivityController.listUsersActivities(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "", clientNames ?= "", usernames ?= "")
GET            /users/activities/:username                      @org.iatoki.judgels.jophiel.controllers.UserActivityController.viewUserActivities(username)
GET            /users/activities/:username/                     @org.iatoki.judgels.jophiel.controllers.UserActivityController.listUserActivities(username, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "", clientNames ?= "")

GET            /clients                                         @org.iatoki.judgels.jophiel.controllers.ClientController.index()
GET            /clients/                                        @org.iatoki.judgels.jophiel.controllers.ClientController.listClients(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET            /clients/create                                  @org.iatoki.judgels.jophiel.controllers.ClientController.createClient()
POST           /clients/create                                  @org.iatoki.judgels.jophiel.controllers.ClientController.postCreateClient()
GET            /clients/$cId<[0-9]{1,18}>/view                  @org.iatoki.judgels.jophiel.controllers.ClientController.viewClient(cId: Long)
GET            /clients/$cId<[0-9]{1,18}>/update                @org.iatoki.judgels.jophiel.controllers.ClientController.updateClient(cId: Long)
POST           /clients/$cId<[0-9]{1,18}>/update                @org.iatoki.judgels.jophiel.controllers.ClientController.postUpdateClient(cId: Long)
GET            /clients/$cId<[0-9]{1,18}>/delete                @org.iatoki.judgels.jophiel.controllers.ClientController.deleteClient(cId: Long)

GET            /                                                @org.iatoki.judgels.jophiel.controllers.ApplicationController.index()

GET            /register                                        @org.iatoki.judgels.jophiel.controllers.UserAccountController.register()
POST           /register                                        @org.iatoki.judgels.jophiel.controllers.UserAccountController.postRegister()
GET            /afterRegister                                   @org.iatoki.judgels.jophiel.controllers.UserAccountController.afterRegister(email: String ?= "")
GET            /forgotPass                                      @org.iatoki.judgels.jophiel.controllers.UserAccountController.forgotPassword()
POST           /forgotPass                                      @org.iatoki.judgels.jophiel.controllers.UserAccountController.postForgotPassword()
GET            /afterForgotPass                                 @org.iatoki.judgels.jophiel.controllers.UserAccountController.afterForgotPassword(email: String ?= "")
GET            /changePass/:code                                @org.iatoki.judgels.jophiel.controllers.UserAccountController.changePassword(code: String)
POST           /changePass/:code                                @org.iatoki.judgels.jophiel.controllers.UserAccountController.postChangePassword(code: String)
GET            /afterChangePass                                 @org.iatoki.judgels.jophiel.controllers.UserAccountController.afterChangePassword()
GET            /auth                                            @org.iatoki.judgels.jophiel.controllers.UserAccountController.serviceAuthRequest()
POST           /auth                                            @org.iatoki.judgels.jophiel.controllers.UserAccountController.postServiceAuthRequest(path: String)
GET            /login                                           @org.iatoki.judgels.jophiel.controllers.UserAccountController.login()
POST           /login                                           @org.iatoki.judgels.jophiel.controllers.UserAccountController.postLogin()
GET            /serviceLogin                                    @org.iatoki.judgels.jophiel.controllers.UserAccountController.serviceLogin(continueUrl: String ?= "")
POST           /serviceLogin                                    @org.iatoki.judgels.jophiel.controllers.UserAccountController.postServiceLogin(continueUrl: String ?= "")
GET            /logout                                          @org.iatoki.judgels.jophiel.controllers.UserAccountController.logout()
GET            /serviceLogout/:continueUrl                      @org.iatoki.judgels.jophiel.controllers.UserAccountController.serviceLogout(continueUrl: String)

GET            /profile                                         @org.iatoki.judgels.jophiel.controllers.UserProfileController.profile()
POST           /profile                                         @org.iatoki.judgels.jophiel.controllers.UserProfileController.postProfile()
GET            /profile/:username                               @org.iatoki.judgels.jophiel.controllers.UserProfileController.viewProfile(username: String)
POST           /profile/avatar                                  @org.iatoki.judgels.jophiel.controllers.UserProfileController.postAvatar()
GET            /serviceProfile/:continueUrl                     @org.iatoki.judgels.jophiel.controllers.UserProfileController.serviceProfile(continueUrl: String)
POST           /serviceProfile/:continueUrl                     @org.iatoki.judgels.jophiel.controllers.UserProfileController.postServiceProfile(continueUrl: String)
POST           /serviceProfile/avatar/:continueUrl              @org.iatoki.judgels.jophiel.controllers.UserProfileController.postServiceAvatar(continueUrl: String)

GET            /verifyEmail/:code                               @org.iatoki.judgels.jophiel.controllers.UserEmailController.verifyEmail(code: String)
GET            /users/$uId<[0-9]{1,18}>/resendEmail             @org.iatoki.judgels.jophiel.controllers.UserEmailController.resendEmailVerification(uId: Long)
GET            /users/$uId<[0-9]{1,18}>/activateMainEmail       @org.iatoki.judgels.jophiel.controllers.UserEmailController.activateMainEmail(uId: Long)

POST           /token                                           @org.iatoki.judgels.jophiel.controllers.apis.UserAPIController.token()
GET            /userinfo                                        @org.iatoki.judgels.jophiel.controllers.apis.UserAPIController.userInfo()
POST           /userinfo                                        @org.iatoki.judgels.jophiel.controllers.apis.UserAPIController.userInfo()
GET            /verifyUsername                                  @org.iatoki.judgels.jophiel.controllers.apis.UserAPIController.verifyUsername()
GET            /userInfoByJid                                   @org.iatoki.judgels.jophiel.controllers.apis.UserAPIController.userInfoByUserJid()
POST           /userActivities                                  @org.iatoki.judgels.jophiel.controllers.apis.UserActivityAPIController.postCreateUserActivity()

OPTIONS        /userAutoComplete                                @org.iatoki.judgels.jophiel.controllers.apis.UserAPIController.preUserAutocompleteList()
GET            /userAutoComplete                                @org.iatoki.judgels.jophiel.controllers.apis.UserAPIController.userAutoCompleteList()
OPTIONS        /clientAutoComplete                              @org.iatoki.judgels.jophiel.controllers.apis.ClientAPIController.preClientAutocompleteList()
GET            /clientAutoComplete                              @org.iatoki.judgels.jophiel.controllers.apis.ClientAPIController.clientAutoCompleteList()

GET            /avatar/:imageName                               @org.iatoki.judgels.jophiel.controllers.apis.UserAPIController.renderAvatarImage(imageName: String)